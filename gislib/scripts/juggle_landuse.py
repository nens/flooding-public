#!/usr/bin/python
# -*- coding: utf-8 -*-

from __future__ import print_function
from __future__ import unicode_literals
from __future__ import absolute_import
from __future__ import division

import gdal
import sys

from matplotlib import colors

COLORMAP = colors.ListedColormap([
    # Entries created with sld2color
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0.7411764705882353, 0.23529411764705882, 0.3215686274509804, 1),
    (0.9686274509803922, 0.7647058823529411, 0.7764705882352941, 1),
    (0.9686274509803922, 0.34901960784313724, 0.2235294117647059, 1),
    (0.9686274509803922, 0.2196078431372549, 0.35294117647058826, 1),
    (0.807843137254902, 0.5254901960784314, 0.5803921568627451, 1),
    (0.9686274509803922, 0.5882352941176471, 0.4823529411764706, 1),
    (0.7411764705882353, 0.20392156862745098, 0.19215686274509805, 1),
    (1.0, 0.4117647058823529, 0.5176470588235295, 1),
    (0.9686274509803922, 0.42745098039215684, 0.38823529411764707, 1),
    (0.7411764705882353, 0.44313725490196076, 0.38823529411764707, 1),
    (0.7411764705882353, 0.5882352941176471, 0.5490196078431373, 1),
    (0.7411764705882353, 0.23529411764705882, 0.3215686274509804, 1),
    (0.7411764705882353, 0.23529411764705882, 0.3215686274509804, 1),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0.0, 0.44313725490196076, 1.0, 1),
    (0.19215686274509805, 0.20392156862745098, 0.19215686274509805, 1),
    (0.4196078431372549, 0.4117647058823529, 0.4196078431372549, 1),
    (0.7098039215686275, 0.6980392156862745, 0.7098039215686275, 1),
    (0.0, 0.44313725490196076, 0.2901960784313726, 1),
    (0.7411764705882353, 0.23529411764705882, 0.3215686274509804, 1),
    (0.45098039215686275, 0.44313725490196076, 0.0, 1),
    (0.45098039215686275, 0.44313725490196076, 0.0, 1),
    (0.9058823529411765, 0.8901960784313725, 0.9058823529411765, 1),
    (0.6470588235294118, 1.0, 0.45098039215686275, 1),
    (0.6470588235294118, 1.0, 0.45098039215686275, 1),
    (0.0, 0.0, 0.0, 1),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0.6470588235294118, 1.0, 0.45098039215686275, 1),
    (1.0, 1.0, 0.45098039215686275, 1),
    (0.807843137254902, 0.6666666666666666, 0.38823529411764707, 1),
    (1.0, 0.0, 0.7764705882352941, 1),
    (0.9058823529411765, 0.9058823529411765, 0.0, 1),
    (0.45098039215686275, 0.30196078431372547, 0.0, 1),
    (0, 0, 0, 0),
    (0.9686274509803922, 0.5882352941176471, 0.4823529411764706, 1),
    (0.45098039215686275, 0.44313725490196076, 0.0, 1),
    (0.8705882352941177, 0.44313725490196076, 1.0, 1),
    (0, 0, 0, 0),
    (0.3215686274509804, 1.0, 0.0, 1),
    (0.0, 0.44313725490196076, 0.2901960784313726, 1),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0.7411764705882353, 0.23529411764705882, 0.3215686274509804, 1),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0.0, 0.0, 0.0, 1),
    (0, 0, 0, 0),
    (0.7764705882352941, 0.36470588235294116, 0.38823529411764707, 1),
    (0.807843137254902, 0.5254901960784314, 0.5803921568627451, 1),
    (0.9686274509803922, 0.2196078431372549, 0.35294117647058826, 1),
    (0.9686274509803922, 0.42745098039215684, 0.38823529411764707, 1),
    (0.45098039215686275, 0.5411764705882353, 0.25882352941176473, 1),
    (0.2235294117647059, 0.6666666666666666, 0.0, 1),
    (0.9686274509803922, 0.5882352941176471, 0.4823529411764706, 1),
    (0.0, 0.44313725490196076, 0.2901960784313726, 1),
    (0.9058823529411765, 0.8901960784313725, 0.9058823529411765, 1),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0, 0, 0, 0),
    (0.9058823529411765, 0.8901960784313725, 0.9058823529411765, 1),
])


def main():
    inputpath = sys.argv[1]
    outputpath = sys.argv[2]

    # Convert source data using colormap
    source = gdal.Open(inputpath)
    data = source.ReadAsArray()
    rgba = COLORMAP(data, bytes=True)

    # Create gdaldataset with 4 bands, byte type, tiff compression
    target = gdal.GetDriverByName(b'GTiff').Create(
        outputpath,
        source.RasterXSize,
        source.RasterYSize,
        4,
        gdal.GDT_Byte,
        ["COMPRESS=DEFLATE"],
    )
    # Inherit geotransform, source projection from source
    target.SetProjection(source.GetProjection())
    target.SetGeoTransform(source.GetGeoTransform())
    for i in range(4):
        band = target.GetRasterBand(i + 1)
        band.WriteArray(rgba[..., i])


if __name__ == '__main__':
    exit(main())
