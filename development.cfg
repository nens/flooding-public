[buildout]
index = http://packages.lizardsystem.nl
find-links =
unzip = true
prefer-final = true
show-picked-versions = true
extensions =
    mr.developer
always-checkout = force
parts =
    sysegg
    mkdir
    django
    omelette
    console_scripts
    pydev
    nginxconf
    collectstatic
    supervisor
    rasterserverjson
develop = .
eggs =
    flooding
    pyparsing

[sysegg]
# Add eggs here that are best handled through OS-level packages.
recipe = syseggrecipe
force-sysegg = true
eggs =
    gdal
    psycopg2
#   mapnik deliberately not here, buildout / syseggrecipe don't work

[versions]
# Specific pins
flooding =
Django = 1.9.13

# Syseggs
gdal =
psycopg2 =

# For Celery
# I *think* this is the last Celery version that works with Django 1.8
# This is the last zipp version that works with Python 2
# The billiard and vine versions have been downgraded to work with celery 4.1
# Same for django-celery-results
celery = 4.1.1
zipp = 2.2.1
amqp = 2.6.1
billiard = 3.5.0.2
importlib-metadata = 2.0.0
kombu = 4.6.11
vine = 1.3.0
django-celery-results = 1.0.4

# Reported by buildout
Flask = 0.10.1
Jinja2 = 2.10
Markdown = 2.2.0
MarkupSafe = 1.1.0
Pillow = 5.3.0
Pygments = 2.3.1
Shapely = 1.6.4.post2
Werkzeug = 0.14.1
anyjson = 0.3.3
astroid = 1.1.1
backports-abc = 0.4
backports.functools-lru-cache = 1.5
backports.shutil-get-terminal-size = 1.0.0
backports.ssl-match-hostname = 3.5.0.1
bleach = 3.1.0
certifi = 2018.11.29
cftime = 1.0.3.4
chardet = 3.0.4
cns.recipe.symlink = 0.2.3
collective.recipe.omelette = 0.16
collective.recipe.supervisor = 0.19
collective.recipe.template = 2.1
colorama = 0.4.1
configparser = 3.5.0
contextlib2 = 0.5.5
coverage = 4.5.2
cycler = 0.10.0
decorator = 4.3.0
django-appconf = 1.0
django-celery = 3.0.21
django-compressor = 1.4
django-debug-toolbar = 0.9.4
django-excel-response =
django-markdown-deux = 1.0.4
django-treebeard = 3.0
djangorecipe = 2.2.1
djcelery = 3.0.21
docutils = 0.14
eazysvn = 1.15.0
ecdsa = 0.13
enum34 = 1.1.6
factory-boy = 2.4.1
flake8 = 3.6.0
gunicorn = 19.9.0
idna = 2.8
ipython = 5.8.0
ipython-genutils = 0.2.0
iso8601 = 0.1.12
itsdangerous = 0.24
iw.recipe.cmd = 0.3
kiwisolver = 1.0.1
lizard-worker = 0.12
logilab-common = 0.62.0
# mapnik = 2.2.0 deliberately not here, buildout / syseggrecipe don't work
markdown2 = 2.2.1
matplotlib = 1.3.1
mccabe = 0.6.1
meld3 = 1.0.2
mock = 0.8.0
mr.developer = 1.38
nens = 1.13
netCDF4 = 1.4.2
networkx = 2.2
numpy = 1.15.4
paramiko = 1.16.0
pathlib2 = 2.3.3
pb.recipes.pydev = 0.4.5
pep8 = 1.7.1
pexpect = 4.6.0
pickleshare = 0.7.5
pika = 0.10.0
pkginfo = 1.5.0.1
prompt-toolkit = 1.0.15
ptyprocess = 0.6.0
pycodestyle = 2.4.0
pycrypto = 2.6.1
pyflakes = 2.0.0
pyparsing = 2.3.0
pyproj = 1.9.5.1
python-dateutil = 2.5.2
python-memcached = 1.59
pytz = 2018.7
raven = 6.1.0
readme-renderer = 24.0
requests = 2.21.0
requests-toolbelt = 0.9.1
scandir = 1.9.0
scipy = 1.1.0
simplegeneric = 0.8.1
singledispatch = 3.4.0.3
six = 1.15.0
subprocess32 = 3.5.3
supervisor = 3.3.4
syseggrecipe = 1.5.1
tornado = 4.3
tqdm = 4.31.1
traitlets = 4.3.2
twine = 1.13.0
urllib3 = 1.24.1
wcwidth = 0.1.7
webencodings = 0.5.1
xlrd = 0.9.3
xlwt = 0.7.5
z3c.recipe.mkdir = 0.7
zc.recipe.egg = 2.0.7
zest.releaser = 6.17.0


[sources]
lizard-raster = git https://github.com/lizardsystem/lizard-raster.git


[mkdir]
recipe = z3c.recipe.mkdir
paths =
    ${buildout:directory}/var/static
    ${buildout:directory}/var/media
    ${buildout:directory}/var/log
    ${buildout:directory}/var/sqlite
    ${buildout:directory}/var/external_data
    ${buildout:directory}/var/generated_icons
    ${buildout:directory}/var/gisdata

[django]
# Sets up django for testing our application.
# See http://jacobian.org/writing/django-apps-with-buildout/
recipe = djangorecipe
wsgi = true
project = flooding
settings = developmentsettings
scripts-with-settings =
    gunicorn
    celery
test =
    flooding
    flooding_lib
    flooding_presentation
    flooding_visualization
    flooding_base
    raster_server
    lizard_worker
    gislib
eggs = flooding

[console_scripts]
recipe = zc.recipe.egg
interpreter = python
eggs =
    ${buildout:eggs}
    gunicorn
# Development tools
    flake8
    coverage

[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}

[pydev]
recipe = pb.recipes.pydev
eggs = ${buildout:eggs}
pydevproject_path = ${buildout:directory}/.pydevproject
extra_paths =

[symlinks]
recipe = cns.recipe.symlink
symlink =
    /mnt/flod-share/exportruns/export_runs_csvs = var/export_runs_csvs
    /mnt/flod-share/pyramids = var/pyramids
    /mnt/flod-share/ror_keringen = var/ror_keringen
    /mnt/flod-share/excel = var/excel
    /mnt/flod-share/import = var/media/import

[nginxconf]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/nginx.conf.in
output = ${buildout:directory}/etc/${serverconfig:sitename}.nginx.conf

[rasterserverjson]
recipe = collective.recipe.template
input = ${buildout:directory}/etc/rasterserver.json.in
output = ${buildout:directory}/etc/rasterserver.json

[collectstatic]
recipe = iw.recipe.cmd
on_install = true
on_update = true
cmds = ${buildout:bin-directory}/django collectstatic --noinput

[supervisor]
recipe = collective.recipe.supervisor
port = ${serverconfig:supervisor-port}
user = sdfsdfsdf
password = aosdifsdf
supervisord-environment=RASTER_SERVER_SETTINGS=${buildout:directory}/etc/rasterserver.json
programs =
      10 gunicorn ${buildout:bin-directory}/gunicorn-with-settings [--bind 127.0.0.1:${serverconfig:gunicorn-port} --workers=${serverconfig:workers} --timeout 600 --preload --max-requests=${serverconfig:maxrequests} flooding.wsgi]
      20 cron_calculate_province_statistics_script (autostart=false autorestart=false startsecs=0) ${buildout:bin-directory}/django [calculate_province_statistics]
      30 cron_create_province_excel_script (autostart=false autorestart=false startsecs=0) ${buildout:bin-directory}/django [create_ror_excel_files]
      40 rasterserver ${buildout:bin-directory}/gunicorn [--bind=127.0.0.1:${serverconfig:rasterserver-port} raster_server.server:app]

[supervisor-cronjob]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:bin-directory}/supervisord

[excel-cronjob]
recipe = z3c.recipe.usercrontab
# Nights at 3
times = 0 3 * * *
command = ${buildout:bin-directory}/django excel_files_for_all_projects

[calculate_province_statistics_cronjob]
recipe = z3c.recipe.usercrontab
times = 1 6 * * *
command = ${buildout:bin-directory}/supervisorctl start cron_calculate_province_statistics_script

[create_province_excel_script]
recipe = z3c.recipe.usercrontab
times = 30 6 * * *
command = ${buildout:bin-directory}/supervisorctl start cron_create_province_excel_script

[serverconfig]
# Settings for supervisor, nginx and so.
# Override these in your buildout.cfg
gunicorn-port = todo
supervisor-port = 1234
rasterserver-port = 5000
sitename = todo
workers = 3
maxrequests = 500

[supervisor]
programs =
      100 task_200 ${buildout:directory}/bin/django [lw_task_worker --task_code 200 --log_level INFO --worker_nr 1]
      110 task_150 ${buildout:directory}/bin/django [lw_task_worker --task_code 150 --log_level INFO --worker_nr 2]
      120 task_155 ${buildout:directory}/bin/django [lw_task_worker --task_code 155 --log_level INFO --worker_nr 3]
      130 task_180 ${buildout:directory}/bin/django [lw_task_worker --task_code 180 --log_level INFO --worker_nr 4]
      140 task_201 ${buildout:directory}/bin/django [lw_task_worker --task_code 201 --log_level INFO --worker_nr 5]
      150 task_220 ${buildout:directory}/bin/django [lw_task_worker --task_code 220 --log_level INFO --worker_nr 6]
      160 task_120 ${buildout:directory}/bin/django [lw_task_worker --task_code 120 --log_level INFO --worker_nr 7]
      170 task_132 ${buildout:directory}/bin/django [lw_task_worker --task_code 132 --log_level INFO --worker_nr 8]
      180 task_134 ${buildout:directory}/bin/django [lw_task_worker --task_code 134 --log_level INFO --worker_nr 9]
      190 task_162 ${buildout:directory}/bin/django [lw_task_worker --task_code 162 --log_level INFO --worker_nr 10]
      200 task_185 ${buildout:directory}/bin/django [lw_task_worker --task_code 185 --log_level INFO --worker_nr 11]
      210 task_190 ${buildout:directory}/bin/django [lw_task_worker --task_code 190 --log_level INFO --worker_nr 12]
